name: Release

on:
  push:
    tags: [ 'v[0-9]+.*' ]

jobs:
  build:
    name: Build and Release
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target:
          - x86_64-apple-darwin
          - x86_64-unknown-linux-gnu

    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          override: true
      - uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: --release --target=${{ matrix.target }}
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: target/*


#  create-release:
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v2
#      - run: cargo package
#      - uses: taiki-e/create-gh-release-action@v1
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#      - run: |
#          sed -i 's/pulsar/sn-pulsar/g' Cargo.toml &&
#          sed -i 's/wyyerd\/sn-pulsar-rs/streamnative\/pulsar-rs/g' Cargo.toml
#      - run: cargo publish --allow-dirty
#        env:
#          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}

#  upload-assets:
##    needs: [create-release]
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v2
#      - run: |
#          sed -i 's/pulsar/sn-pulsar/g' Cargo.toml &&
#          sed -i 's/wyyerd\/sn-pulsar-rs/streamnative\/pulsar-rs/g' Cargo.toml
#
#      - uses: taiki-e/upload-rust-binary-action@v1
#        with:
#          bin: sn-pulsar
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}